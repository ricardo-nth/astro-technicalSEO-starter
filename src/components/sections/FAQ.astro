---
import { getFAQs } from '../../utils/content';

interface Props {
  category?: string;
  limit?: number;
}

const { category, limit } = Astro.props;
const faqData = await getFAQs();

let faqsToShow = faqData?.categories || [];

// Filter by category if specified
if (category) {
  faqsToShow = faqsToShow.filter(cat => cat.name === category);
}

// Limit questions if specified
if (limit) {
  faqsToShow = faqsToShow.map(cat => ({
    ...cat,
    questions: cat.questions.slice(0, limit)
  }));
}
---

<section class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="text-center mb-12">
    <h2 class="text-3xl font-bold text-gray-900 mb-4">
      Frequently Asked Questions
    </h2>
    <p class="text-lg text-gray-600">
      Find answers to common questions about our services
    </p>
  </div>

  <div class="space-y-8">
    {faqsToShow.map((category) => (
      <div>
        <h3 class="text-xl font-semibold text-gray-900 mb-6">
          {category.name}
        </h3>
        <div class="space-y-4">
          {category.questions.map((faq, index) => (
            <details class="group border border-gray-200 rounded-lg">
              <summary class="flex justify-between items-center cursor-pointer p-6 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                <h4 class="font-medium text-gray-900 pr-4">
                  {faq.question}
                </h4>
                <span class="text-gray-500 group-open:rotate-180 transition-transform">
                  â†“
                </span>
              </summary>
              <div class="p-6 bg-white">
                <p class="text-gray-600 leading-relaxed">
                  {faq.answer}
                </p>
              </div>
            </details>
          ))}
        </div>
      </div>
    ))}
  </div>
</section>

<style>
  details[open] summary {
    border-bottom: 1px solid #e5e7eb;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
</style>
