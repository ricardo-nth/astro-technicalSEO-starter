---
export interface Props {
  badge?: {
    icon?: string;
    text: string;
  };
  title: string;
  highlightText?: string;
  description: string;
  stats?: Array<{
    icon: string;
    number: string;
    label: string;
    color: 'blue' | 'green' | 'purple' | 'orange';
  }>;
}

const { badge, title, highlightText, description, stats } = Astro.props;
---

<section class="hero-section">
  <!-- Background Pattern -->
  <div class="hero-pattern"></div>
  
  <div class="container">
    <div class="hero-content">
      {badge && (
        <div class="hero-badge">
          {badge.icon && (
            <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
              <path d={badge.icon}/>
            </svg>
          )}
          {badge.text}
        </div>
      )}
      
      <h1 class="hero-title">
        {highlightText ? (
          <Fragment set:html={title.replace(highlightText, `<span class="gradient-text">${highlightText}</span>`)} />
        ) : (
          title
        )}
      </h1>
      
      <p class="hero-description">
        {description}
      </p>
      
      {stats && stats.length > 0 && (
        <div class="hero-stats">
          {stats.map((stat) => (
            <div class="stat-card">
              <div class={`stat-icon stat-icon-${stat.color}`}>
                <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                  <path d={stat.icon}/>
                </svg>
              </div>
              <div class="stat-number">{stat.number}</div>
              <div class="stat-label">{stat.label}</div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>
</section>

<style>
  /* Hero Section */
  .hero-section {
    position: relative;
    padding: 120px 0 80px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    overflow: hidden;
  }
  
  .hero-pattern {
    position: absolute;
    inset: 0;
    background-image: radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                      radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    background-size: 400px 400px;
    animation: float 20s ease-in-out infinite;
  }
  
  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
  }
  
  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50px;
    padding: 8px 20px;
    color: white;
    font-size: 14px;
    font-weight: 500;
    margin-bottom: 24px;
  }
  
  .hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.1;
    color: white;
    margin-bottom: 24px;
  }
  
  .gradient-text {
    background: linear-gradient(45deg, #fbbf24, #f59e0b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .hero-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 40px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .hero-stats {
    display: flex;
    justify-content: center;
    gap: 40px;
    flex-wrap: wrap;
  }
  
  .stat-card {
    text-align: center;
  }
  
  .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 12px;
    color: white;
  }
  
  .stat-icon-blue {
    background: linear-gradient(45deg, #3b82f6, #1d4ed8);
  }
  
  .stat-icon-green {
    background: linear-gradient(45deg, #10b981, #047857);
  }
  
  .stat-icon-purple {
    background: linear-gradient(45deg, #8b5cf6, #7c3aed);
  }
  
  .stat-icon-orange {
    background: linear-gradient(45deg, #f59e0b, #d97706);
  }
  
  .stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: white;
    margin-bottom: 4px;
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.8);
    font-weight: 500;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-section {
      padding: 80px 0 60px;
    }
    
    .hero-title {
      font-size: 2.5rem;
    }
    
    .hero-description {
      font-size: 1.125rem;
    }
    
    .hero-stats {
      gap: 24px;
    }
    
    .stat-number {
      font-size: 1.5rem;
    }
  }
  
  @media (max-width: 480px) {
    .hero-title {
      font-size: 2rem;
    }
    
    .hero-stats {
      flex-direction: column;
      gap: 20px;
    }
  }
</style>
