---
/**
 * Content Validation Component
 * Provides development-time validation feedback for content quality
 */

import { 
  validatePage, 
  generateValidationReport, 
  formatValidationReport,
  defaultQualityRules,
  type ContentQualityRules 
} from '../../utils/validation';
import type { AnySchema } from '../../types/schema';

export interface Props {
  seoData?: any;
  content?: string;
  schemas?: AnySchema[];
  rules?: Partial<ContentQualityRules>;
  showInProduction?: boolean;
}

const {
  seoData,
  content,
  schemas = [],
  rules = {},
  showInProduction = false,
} = Astro.props;

// Only run validation in development or if explicitly enabled
const shouldValidate = import.meta.env.DEV || showInProduction;

let validationReport: ReturnType<typeof generateValidationReport> | null = null;

if (shouldValidate) {
  try {
    const results = validatePage(
      { seo: seoData, content, schemas },
      { ...defaultQualityRules, ...rules }
    );
    
    validationReport = generateValidationReport(results);
    
    // Log to console in development
    if (import.meta.env.DEV && validationReport.results.length > 0) {
      console.log(formatValidationReport(validationReport));
    }
  } catch (error) {
    console.error('Validation error:', error);
  }
}
---

{shouldValidate && validationReport && (
  <div 
    id="content-validation-report" 
    class="validation-report"
    style={{
      position: 'fixed',
      bottom: '20px',
      right: '20px',
      maxWidth: '400px',
      backgroundColor: 'white',
      border: '2px solid #e5e7eb',
      borderRadius: '8px',
      padding: '16px',
      boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)',
      zIndex: '9999',
      fontSize: '14px',
      fontFamily: 'monospace',
      display: validationReport.summary.total > 0 ? 'block' : 'none',
    }}
  >
    <div 
      class="validation-header"
      style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '12px',
        borderBottom: '1px solid #e5e7eb',
        paddingBottom: '8px',
      }}
    >
      <h3 style="margin: 0; fontSize: '16px';">
        üìä Content Quality
      </h3>
      <button 
        onclick="document.getElementById('content-validation-report').style.display = 'none'"
        style={{
          background: 'none',
          border: 'none',
          fontSize: '18px',
          cursor: 'pointer',
          padding: '0',
          color: '#6b7280',
        }}
        aria-label="Close validation report"
      >
        √ó
      </button>
    </div>

    <div class="validation-summary" style="marginBottom: '12px';">
      <div style={{
        display: 'flex',
        gap: '8px',
        fontSize: '12px',
        marginBottom: '8px',
      }}>
        {validationReport.summary.errors > 0 && (
          <span style={{
            backgroundColor: '#fee2e2',
            color: '#dc2626',
            padding: '2px 6px',
            borderRadius: '4px',
          }}>
            ‚ùå {validationReport.summary.errors} errors
          </span>
        )}
        {validationReport.summary.warnings > 0 && (
          <span style={{
            backgroundColor: '#fef3c7',
            color: '#d97706',
            padding: '2px 6px',
            borderRadius: '4px',
          }}>
            ‚ö†Ô∏è {validationReport.summary.warnings} warnings
          </span>
        )}
        {validationReport.summary.info > 0 && (
          <span style={{
            backgroundColor: '#dbeafe',
            color: '#2563eb',
            padding: '2px 6px',
            borderRadius: '4px',
          }}>
            ‚ÑπÔ∏è {validationReport.summary.info} suggestions
          </span>
        )}
      </div>
      
      <div style={{
        fontSize: '12px',
        color: validationReport.summary.valid ? '#16a34a' : '#dc2626',
        fontWeight: 'bold',
      }}>
        {validationReport.summary.valid ? '‚úÖ All checks passed' : '‚ùå Issues found'}
      </div>
    </div>

    <div class="validation-details" style="maxHeight: '300px'; overflow: 'auto';">
      {validationReport.results.slice(0, 10).map((result, index) => (
        <div 
          data-validation-index={index}
          style={{
            marginBottom: '8px',
            padding: '8px',
            borderRadius: '4px',
            backgroundColor: result.level === 'error' ? '#fee2e2' : 
                            result.level === 'warning' ? '#fef3c7' : '#dbeafe',
            borderLeft: `3px solid ${result.level === 'error' ? '#dc2626' : 
                                   result.level === 'warning' ? '#d97706' : '#2563eb'}`,
          }}
        >
          <div style={{ fontWeight: 'bold', fontSize: '12px', marginBottom: '4px' }}>
            {result.level === 'error' ? '‚ùå' : result.level === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è'} {result.field}
          </div>
          <div style={{ fontSize: '11px', marginBottom: '4px' }}>
            {result.message}
          </div>
          {result.suggestion && (
            <div style={{ 
              fontSize: '11px', 
              fontStyle: 'italic', 
              color: '#6b7280',
            }}>
              üí° {result.suggestion}
            </div>
          )}
        </div>
      ))}
      
      {validationReport.results.length > 10 && (
        <div style={{ 
          fontSize: '11px', 
          color: '#6b7280', 
          textAlign: 'center',
          marginTop: '8px',
        }}>
          ... and {validationReport.results.length - 10} more issues
        </div>
      )}
    </div>

    <div style={{
      marginTop: '12px',
      paddingTop: '8px',
      borderTop: '1px solid #e5e7eb',
      fontSize: '11px',
      color: '#6b7280',
      textAlign: 'center',
    }}>
      Development validation - check browser console for details
    </div>
  </div>
)}

<!-- Style for better integration -->
<style>
  .validation-report {
    font-family: 'Courier New', monospace;
  }
  
  .validation-report * {
    box-sizing: border-box;
  }
  
  .validation-report button:hover {
    color: #374151 !important;
  }
  
  .validation-report::-webkit-scrollbar {
    width: 6px;
  }
  
  .validation-report::-webkit-scrollbar-track {
    background: #f1f5f9;
  }
  
  .validation-report::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }
  
  .validation-report::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>
