---
/**
 * Accessibility Enhancement Component
 * Provides comprehensive WCAG 2.1 AA compliance features
 */

export interface Props {
  skipLinksEnabled?: boolean;
  contrastModeEnabled?: boolean;
  reducedMotionEnabled?: boolean;
}

const {
  skipLinksEnabled = true,
  contrastModeEnabled = true,
  reducedMotionEnabled = true
} = Astro.props;
---

{skipLinksEnabled && (
  <div class="skip-links">
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <a href="#navigation" class="skip-link">Skip to navigation</a>
    <a href="#footer" class="skip-link">Skip to footer</a>
  </div>
)}

{contrastModeEnabled && (
  <button 
    id="contrast-toggle"
    type="button"
    class="accessibility-control contrast-toggle"
    aria-label="Toggle high contrast mode"
    aria-pressed="false"
  >
    <span class="sr-only">High Contrast</span>
    <svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true">
      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8v16z"/>
    </svg>
  </button>
)}

{reducedMotionEnabled && (
  <button 
    id="motion-toggle"
    type="button"
    class="accessibility-control motion-toggle"
    aria-label="Toggle reduced motion"
    aria-pressed="false"
  >
    <span class="sr-only">Reduce Motion</span>
    <svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true">
      <path d="M13 4.07V2.05c-2.01-.2-4.07.4-5.37 1.7L9 5.12c.94-.94 2.07-1.32 3.24-1.32.4 0 .8.08 1.19.2L13 4.07zM5.12 9H3.05c.2 2.01 1.4 3.07 1.7 5.37L6.12 13c-.32-.94-.32-2.07-.32-3.24C5.8 9.4 5.88 9.2 6.07 9H5.12z"/>
    </svg>
  </button>
)}

<div 
  id="accessibility-panel" 
  class="accessibility-panel"
  role="dialog"
  aria-labelledby="accessibility-title"
  aria-hidden="true"
>
  <div class="accessibility-panel-content">
    <h2 id="accessibility-title">Accessibility Options</h2>
    
    <button 
      id="close-accessibility"
      type="button"
      class="close-button"
      aria-label="Close accessibility panel"
    >
      <span aria-hidden="true">&times;</span>
    </button>

    <div class="accessibility-controls">
      <fieldset>
        <legend>Visual Preferences</legend>
        
        <label class="accessibility-option">
          <input type="checkbox" id="high-contrast" />
          <span>High Contrast Mode</span>
        </label>
        
        <label class="accessibility-option">
          <input type="checkbox" id="large-text" />
          <span>Large Text</span>
        </label>
        
        <label class="accessibility-option">
          <input type="checkbox" id="reduced-motion" />
          <span>Reduce Motion</span>
        </label>
      </fieldset>

      <fieldset>
        <legend>Navigation Preferences</legend>
        
        <label class="accessibility-option">
          <input type="checkbox" id="focus-indicators" />
          <span>Enhanced Focus Indicators</span>
        </label>
        
        <label class="accessibility-option">
          <input type="checkbox" id="keyboard-nav" />
          <span>Keyboard Navigation Hints</span>
        </label>
      </fieldset>
    </div>
  </div>
</div>

<button 
  id="accessibility-trigger"
  type="button"
  class="accessibility-trigger"
  aria-label="Open accessibility options"
  aria-expanded="false"
  aria-controls="accessibility-panel"
>
  <span class="sr-only">Accessibility Options</span>
  <svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true">
    <path d="M12 2a2 2 0 0 1 2 2 2 2 0 0 1-2 2 2 2 0 0 1-2-2 2 2 0 0 1 2-2m9 7h-3v2h1v6h-1v2h3v-2h-1V9M8 8v8h2v4h2v-4h2V8H8Z"/>
  </svg>
</button>

<style>
  /* Skip Links */
  .skip-links {
    position: absolute;
    top: -100px;
    left: 0;
    z-index: 9999;
  }

  .skip-link {
    position: absolute;
    top: 100px;
    left: 8px;
    background: var(--color-primary, #2563eb);
    color: white;
    padding: 8px 16px;
    text-decoration: none;
    border-radius: 4px;
    font-weight: 600;
    transform: translateY(-100px);
    transition: transform 0.2s ease;
  }

  .skip-link:focus {
    transform: translateY(0);
  }

  /* Screen Reader Only */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Accessibility Controls */
  .accessibility-control {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
    background: var(--color-surface, white);
    border: 2px solid var(--color-border, #e5e7eb);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
  }

  .accessibility-control:hover {
    background: var(--color-primary, #2563eb);
    color: white;
    transform: scale(1.05);
  }

  .accessibility-control:focus {
    outline: 3px solid var(--color-focus, #3b82f6);
    outline-offset: 2px;
  }

  /* Accessibility Trigger */
  .accessibility-trigger {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    background: var(--color-primary, #2563eb);
    color: white;
    border: none;
    border-radius: 50%;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
    transition: all 0.2s ease;
  }

  .accessibility-trigger:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 16px rgba(37, 99, 235, 0.4);
  }

  .accessibility-trigger:focus {
    outline: 3px solid white;
    outline-offset: 2px;
  }

  /* Accessibility Panel */
  .accessibility-panel {
    position: fixed;
    top: 0;
    right: -400px;
    width: 400px;
    height: 100vh;
    background: var(--color-surface, white);
    box-shadow: -4px 0 12px rgba(0, 0, 0, 0.1);
    z-index: 1001;
    transition: right 0.3s ease;
    overflow-y: auto;
  }

  .accessibility-panel[aria-hidden="false"] {
    right: 0;
  }

  .accessibility-panel-content {
    padding: 24px;
  }

  .accessibility-panel h2 {
    margin: 0 0 24px 0;
    color: var(--color-text, #1f2937);
    font-size: 1.5rem;
    font-weight: 600;
  }

  .close-button {
    position: absolute;
    top: 16px;
    right: 16px;
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    padding: 8px;
    color: var(--color-text-secondary, #6b7280);
    transition: color 0.2s ease;
  }

  .close-button:hover {
    color: var(--color-text, #1f2937);
  }

  .close-button:focus {
    outline: 2px solid var(--color-focus, #3b82f6);
    outline-offset: 2px;
  }

  /* Accessibility Options */
  .accessibility-controls fieldset {
    border: 1px solid var(--color-border, #e5e7eb);
    border-radius: 8px;
    margin: 0 0 24px 0;
    padding: 16px;
  }

  .accessibility-controls legend {
    font-weight: 600;
    color: var(--color-text, #1f2937);
    padding: 0 8px;
  }

  .accessibility-option {
    display: flex;
    align-items: center;
    margin: 12px 0;
    cursor: pointer;
    gap: 12px;
  }

  .accessibility-option input {
    width: 18px;
    height: 18px;
    margin: 0;
  }

  .accessibility-option span {
    color: var(--color-text, #1f2937);
    font-size: 0.95rem;
  }

  /* High Contrast Mode */
  body.high-contrast {
    --color-text: #000000;
    --color-bg: #ffffff;
    --color-primary: #0000ff;
    --color-border: #000000;
    filter: contrast(150%);
  }

  body.high-contrast * {
    text-shadow: none !important;
    box-shadow: none !important;
  }

  /* Large Text Mode */
  body.large-text {
    font-size: 120%;
  }

  body.large-text h1 { font-size: 3rem; }
  body.large-text h2 { font-size: 2.5rem; }
  body.large-text h3 { font-size: 2rem; }
  body.large-text p, body.large-text li { font-size: 1.25rem; }

  /* Reduced Motion */
  .reduced-motion *,
  .reduced-motion *::before,
  .reduced-motion *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  /* Enhanced Focus Indicators */
  .enhanced-focus *:focus {
    outline: 3px solid var(--color-focus, #3b82f6) !important;
    outline-offset: 2px !important;
  }

  /* Keyboard Navigation Hints */
  .keyboard-nav-hints [tabindex]:not([tabindex="-1"])::after {
    content: attr(aria-label);
    position: absolute;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .keyboard-nav-hints [tabindex]:not([tabindex="-1"]):focus::after {
    opacity: 1;
  }

  /* Mobile Responsiveness */
  @media (max-width: 480px) {
    .accessibility-panel {
      width: 100vw;
      right: -100vw;
    }
    
    .accessibility-trigger {
      bottom: 80px;
      right: 16px;
      width: 48px;
      height: 48px;
    }
  }
</style>

<script is:inline>
  // Simplified accessibility enhancer without TypeScript errors
  document.addEventListener('DOMContentLoaded', function() {
    const panel = document.getElementById('accessibility-panel');
    const trigger = document.getElementById('accessibility-trigger');
    const closeBtn = document.getElementById('close-accessibility');
    
    // Toggle panel
    if (trigger) {
      trigger.addEventListener('click', function() {
        const isHidden = panel?.getAttribute('aria-hidden') === 'true';
        panel?.setAttribute('aria-hidden', (!isHidden).toString());
        trigger?.setAttribute('aria-expanded', isHidden.toString());
      });
    }
    
    // Close panel
    if (closeBtn) {
      closeBtn.addEventListener('click', function() {
        panel?.setAttribute('aria-hidden', 'true');
        trigger?.setAttribute('aria-expanded', 'false');
      });
    }
    
    // Accessibility toggles
    const highContrastToggle = document.getElementById('high-contrast');
    const largeTextToggle = document.getElementById('large-text');
    const reducedMotionToggle = document.getElementById('reduced-motion');
    
    if (highContrastToggle) {
      highContrastToggle.addEventListener('change', function() {
        document.body.classList.toggle('high-contrast', this.checked);
        localStorage.setItem('accessibility-highContrast', this.checked.toString());
      });
    }
    
    if (largeTextToggle) {
      largeTextToggle.addEventListener('change', function() {
        document.body.classList.toggle('large-text', this.checked);
        localStorage.setItem('accessibility-largeText', this.checked.toString());
      });
    }
    
    if (reducedMotionToggle) {
      reducedMotionToggle.addEventListener('change', function() {
        document.body.classList.toggle('reduced-motion', this.checked);
        localStorage.setItem('accessibility-reducedMotion', this.checked.toString());
      });
    }
    
    // Load saved preferences
    try {
      const savedHighContrast = localStorage.getItem('accessibility-highContrast') === 'true';
      const savedLargeText = localStorage.getItem('accessibility-largeText') === 'true';
      const savedReducedMotion = localStorage.getItem('accessibility-reducedMotion') === 'true';
      
      if (savedHighContrast) {
        document.body.classList.add('high-contrast');
        if (highContrastToggle) highContrastToggle.checked = true;
      }
      
      if (savedLargeText) {
        document.body.classList.add('large-text');
        if (largeTextToggle) largeTextToggle.checked = true;
      }
      
      if (savedReducedMotion) {
        document.body.classList.add('reduced-motion');
        if (reducedMotionToggle) reducedMotionToggle.checked = true;
      }
    } catch (e) {
      console.warn('Failed to load accessibility preferences:', e);
    }
    
    // Keyboard navigation
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && panel?.getAttribute('aria-hidden') === 'false') {
        panel.setAttribute('aria-hidden', 'true');
        trigger?.setAttribute('aria-expanded', 'false');
      }
    });
  });
</script>
