---
// Import layout
import SiteLayout from '../layouts/SiteLayout.astro';

// Import components
import EnhancedSchema from '../components/seo/EnhancedSchema.astro';

// Import content utilities
import { getAllTeamMembers, getPageSEO } from '../utils/content.ts';

// Get team data
const allTeamMembers = await getAllTeamMembers();
const teamSEO = await getPageSEO('team');

// Helper function to format social links
function formatSocialIcon(platform: string): string {
  const icons: Record<string, string> = {
    'linkedin': 'fab fa-linkedin',
    'twitter': 'fab fa-twitter',
    'github': 'fab fa-github',
    'email': 'fas fa-envelope',
    'website': 'fas fa-globe'
  };
  return icons[platform.toLowerCase()] || 'fas fa-link';
}

// Group team members by department (filter out undefined departments)
const departments = [...new Set(allTeamMembers
  .map(member => member.data.department)
  .filter((dept): dept is string => dept !== undefined)
)];

// Sort team members by seniority/role hierarchy
function getSortOrder(role: string) {
  const hierarchy = {
    'CEO': 1,
    'CTO': 2,
    'VP': 3,
    'Director': 4,
    'Senior Manager': 5,
    'Manager': 6,
    'Senior Developer': 7,
    'Developer': 8,
    'Specialist': 9,
    'Consultant': 10,
    'Analyst': 11,
    'Coordinator': 12
  };
  
  for (const [title, order] of Object.entries(hierarchy)) {
    if (role.includes(title)) return order;
  }
  return 999; // Default for unmatched roles
}

const sortedTeamMembers = allTeamMembers.sort((a, b) => {
  const deptA = a.data.department || '';
  const deptB = b.data.department || '';
  const deptCompare = deptA.localeCompare(deptB);
  if (deptCompare !== 0) return deptCompare;
  
  const roleA = getSortOrder(a.data.role);
  const roleB = getSortOrder(b.data.role);
  return roleA - roleB;
});

// Page metadata
const metadata = {
  title: teamSEO?.title || 'Our Team - Meet the Experts Behind Our Success',
  description: teamSEO?.description || 'Meet our talented team of technical SEO experts, web developers, and digital strategists committed to delivering exceptional results and driving your online success.',
  url: new URL(Astro.url.pathname, Astro.site).toString(),
  keywords: teamSEO?.keywords?.join(', ') || 'team, experts, technical SEO specialists, web developers, digital strategists, professional team',
  ogType: 'website',
  siteName: 'Technical SEO Starter',
  twitterCard: 'summary_large_image',
};
---

<SiteLayout metadata={metadata}>
  <EnhancedSchema
    type="webpage"
    title={teamSEO?.title || "Our Team - Meet the Experts Behind Our Success"}
    description={teamSEO?.description || "Meet our talented team of technical SEO experts and web developers."}
    url={new URL(Astro.url.pathname, Astro.site).toString()}
    breadcrumbs={teamSEO?.schema?.breadcrumbs || [
      { name: 'Home', url: '/' },
      { name: 'Team' }
    ]}
  />
  
  <!-- Team Hero Section -->
  <section class="hero-section">
    <!-- Background Pattern -->
    <div class="hero-pattern"></div>
    
    <div class="container">
      <div class="hero-content">
        <div class="hero-badge">
          <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          Meet Our Amazing Team
        </div>
        
        <h1 class="hero-title">
          The <span class="gradient-text">Experts</span> Behind Your Success
        </h1>
        
        <p class="hero-description">
          Our diverse team of technical SEO specialists, developers, and strategists brings together decades of experience 
          to deliver exceptional results for your business.
        </p>
        
        <div class="hero-stats">
          <div class="stat-card">
            <div class="stat-icon stat-icon-blue">
              <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
            <div class="stat-number">{allTeamMembers.length}</div>
            <div class="stat-label">Team Members</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-icon stat-icon-green">
              <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
              </svg>
            </div>
            <div class="stat-number">{departments.length}</div>
            <div class="stat-label">Departments</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-icon stat-icon-purple">
              <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
              </svg>
            </div>
            <div class="stat-number">Expert</div>
            <div class="stat-label">Level</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Department Filter -->
  <section class="filter-section">
    <div class="container">
      <div class="filter-header">
        <h2 class="filter-title">Filter by Department</h2>
        <p class="filter-subtitle">Explore our talented team across different departments</p>
      </div>
      <div class="filter-buttons">
        <button 
          class="filter-btn active"
          data-department="all"
        >
          <span class="filter-btn-content">
            <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
              <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
            </svg>
            All Team ({allTeamMembers.length})
          </span>
        </button>
        {departments.map(department => {
          const count = allTeamMembers.filter(member => member.data.department === department).length;
          const icon = department === 'Leadership' ? 'M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z' : 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z';
          return (
            <button 
              class="filter-btn"
              data-department={department}
            >
              <span class="filter-btn-content">
                <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                  <path d={icon}/>
                </svg>
                {department} ({count})
              </span>
            </button>
          );
        })}
      </div>
    </div>
  </section>

  <!-- Team Grid -->
  <section class="team-grid-section">
    <div class="container">
      <div class="team-grid">
        {sortedTeamMembers.map(member => (
          <div 
            class="team-card"
            data-department={member.data.department}
          >
            <!-- Member Card Header -->
            <div class="team-card-content">
              <!-- Small Profile Image -->
              <div class="profile-image-container">
                <img 
                  src={member.data.image}
                  alt={`${member.data.name} - ${member.data.role}`}
                  class="profile-image"
                  loading="lazy"
                />
                {member.data.featured && (
                  <div class="featured-badge">
                    <span class="featured-star">â˜…</span>
                  </div>
                )}
              </div>

              <!-- Member Info -->
              <div class="member-info">
                <h3 class="member-name">
                  {member.data.name}
                </h3>
                <p class="member-role">
                  {member.data.role}
                </p>
                
                <!-- Department and Experience Badges -->
                <div class="member-badges">
                  {member.data.department && (
                    <span class="badge badge-blue">
                      {member.data.department}
                    </span>
                  )}
                  {member.data.experience && (
                    <span class="badge badge-green">
                      {member.data.experience}
                    </span>
                  )}
                </div>
              </div>

              <!-- Bio -->
              <p class="member-bio">
                {member.data.bio}
              </p>

              <!-- Skills -->
              {member.data.skills && member.data.skills.length > 0 && (
                <div class="skills-section">
                  <h4 class="skills-title">Skills</h4>
                  <div class="skills-list">
                    {member.data.skills.slice(0, 3).map((skill: string) => (
                      <span class="skill-tag">
                        {skill}
                      </span>
                    ))}
                    {member.data.skills.length > 3 && (
                      <span class="skill-tag skill-tag-more">
                        +{member.data.skills.length - 3}
                      </span>
                    )}
                  </div>
                </div>
              )}

              <!-- Social Links -->
              {member.data.social && Object.keys(member.data.social).length > 0 && (
                <div class="social-links">
                  {Object.entries(member.data.social).map(([platform, url]) => (
                    <a 
                      href={url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="social-link"
                      aria-label={`${member.data.name} on ${platform}`}
                    >
                      <i class={`${formatSocialIcon(platform)}`}></i>
                    </a>
                  ))}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>

      <!-- Empty State -->
      <div id="empty-state" class="empty-state hidden">
        <div class="empty-state-content">
          <div class="empty-state-icon">
            <svg width="32" height="32" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
            </svg>
          </div>
          <h3 class="empty-state-title">No team members found</h3>
          <p class="empty-state-text">Try selecting a different department to see our amazing team members.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Join Our Team CTA -->
  <section class="cta-section">
    <!-- Background Pattern -->
    <div class="cta-pattern"></div>
    
    <div class="container">
      <div class="cta-content">
        <div class="cta-badge">
          <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
          </svg>
          Join Our Team
        </div>
        
        <h2 class="cta-title">
          Ready to Make an <span class="gradient-text">Impact</span>?
        </h2>
        
        <p class="cta-description">
          We're always looking for talented individuals who share our passion for technical excellence and innovation. 
          Join us in building the future of SEO and web performance.
        </p>
        
        <div class="cta-buttons">
          <a href="/contact" class="cta-btn cta-btn-primary">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
              <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
              <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
            </svg>
            Get In Touch
          </a>
          
          <a href="/about" class="cta-btn cta-btn-secondary">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/>
            </svg>
            Learn More About Us
          </a>
        </div>
      </div>
    </div>
  </section>
</SiteLayout>

<!-- Font Awesome for Social Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
  /* Global Styles */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
  }

  .hidden {
    display: none !important;
  }

  .gradient-text {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  /* Hero Section */
  .hero-section {
    background: linear-gradient(135deg, #eff6ff 0%, #e0e7ff 50%, #f3e8ff 100%);
    padding: 80px 0;
    position: relative;
    overflow: hidden;
  }

  .hero-pattern {
    position: absolute;
    inset: 0;
    opacity: 0.05;
    background-image: radial-gradient(circle at 2px 2px, rgba(59, 130, 246, 0.3) 1px, transparent 0);
    background-size: 30px 30px;
  }

  .hero-content {
    max-width: 1024px;
    margin: 0 auto;
    text-align: center;
    position: relative;
  }

  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border-radius: 9999px;
    background-color: #dbeafe;
    color: #1d4ed8;
    font-size: 14px;
    font-weight: 500;
    margin-bottom: 24px;
  }

  .hero-title {
    font-size: 3rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 24px;
    line-height: 1.2;
  }

  .hero-description {
    font-size: 1.25rem;
    color: #4b5563;
    margin-bottom: 32px;
    line-height: 1.6;
    max-width: 768px;
    margin-left: auto;
    margin-right: auto;
  }

  .hero-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 24px;
    max-width: 640px;
    margin: 0 auto;
  }

  .stat-card {
    background-color: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(4px);
    border-radius: 16px;
    padding: 24px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 16px;
  }

  .stat-icon-blue { background-color: #dbeafe; color: #2563eb; }
  .stat-icon-green { background-color: #dcfce7; color: #16a34a; }
  .stat-icon-purple { background-color: #e9d5ff; color: #9333ea; }

  .stat-number {
    font-size: 1.5rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 4px;
  }

  .stat-label {
    font-size: 14px;
    color: #4b5563;
  }

  /* Filter Section */
  .filter-section {
    padding: 32px 0;
    background-color: white;
    border-bottom: 1px solid #e5e7eb;
  }

  .filter-header {
    text-align: center;
    margin-bottom: 24px;
  }

  .filter-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 8px;
  }

  .filter-subtitle {
    color: #4b5563;
  }

  .filter-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 12px;
    max-width: 1024px;
    margin: 0 auto;
  }

  .filter-btn {
    padding: 12px 24px;
    border-radius: 9999px;
    border: 2px solid #e5e7eb;
    background-color: white;
    color: #374151;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    transform: scale(1);
  }

  .filter-btn:hover {
    border-color: #3b82f6;
    color: #2563eb;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transform: scale(1.05);
  }

  .filter-btn.active {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    border-color: #3b82f6;
    color: white;
    box-shadow: 0 10px 25px -5px rgba(59, 130, 246, 0.4);
  }

  .filter-btn-content {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  /* Team Grid Section */
  .team-grid-section {
    padding: 64px 0;
    background-color: #f9fafb;
  }

  .team-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 24px;
    max-width: 1400px;
    margin: 0 auto;
  }

  .team-card {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    border: 1px solid #f3f4f6;
    animation: fadeInUp 0.6s ease-out;
  }

  .team-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  .team-card-content {
    padding: 24px;
    text-align: center;
  }

  .profile-image-container {
    position: relative;
    margin: 0 auto 16px;
    width: fit-content;
  }

  .profile-image {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid #f3f4f6;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .featured-badge {
    position: absolute;
    top: -4px;
    right: -4px;
  }

  .featured-star {
    background-color: #3b82f6;
    color: white;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
  }

  .member-info {
    margin-bottom: 16px;
  }

  .member-name {
    font-size: 1.125rem;
    font-weight: bold;
    color: #111827;
    margin-bottom: 4px;
  }

  .member-role {
    color: #2563eb;
    font-weight: 500;
    font-size: 14px;
    margin-bottom: 8px;
  }

  .member-badges {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
    margin-bottom: 12px;
  }

  .badge {
    display: inline-flex;
    align-items: center;
    padding: 4px 8px;
    border-radius: 9999px;
    font-size: 12px;
    font-weight: 500;
  }

  .badge-blue {
    background-color: #dbeafe;
    color: #1e40af;
  }

  .badge-green {
    background-color: #dcfce7;
    color: #166534;
  }

  .member-bio {
    color: #4b5563;
    font-size: 14px;
    margin-bottom: 16px;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .skills-section {
    margin-bottom: 16px;
  }

  .skills-title {
    font-size: 12px;
    font-weight: 600;
    color: #374151;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .skills-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 4px;
  }

  .skill-tag {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
    background-color: #f3f4f6;
    color: #374151;
  }

  .skill-tag-more {
    color: #6b7280;
    border: 1px dashed #d1d5db;
    background-color: transparent;
  }

  .social-links {
    display: flex;
    justify-content: center;
    gap: 12px;
    padding-top: 16px;
    border-top: 1px solid #f3f4f6;
  }

  .social-link {
    color: #9ca3af;
    transition: all 0.2s ease;
    font-size: 16px;
  }

  .social-link:hover {
    color: #3b82f6;
    transform: scale(1.1);
  }

  /* Empty State */
  .empty-state {
    text-align: center;
    padding: 80px 0;
  }

  .empty-state-content {
    max-width: 448px;
    margin: 0 auto;
  }

  .empty-state-icon {
    background-color: #f3f4f6;
    border-radius: 50%;
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 16px;
    color: #9ca3af;
  }

  .empty-state-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 8px;
  }

  .empty-state-text {
    color: #6b7280;
  }

  /* CTA Section */
  .cta-section {
    padding: 80px 0;
    background: linear-gradient(135deg, #111827 0%, #1e3a8a 50%, #3730a3 100%);
    position: relative;
    overflow: hidden;
  }

  .cta-pattern {
    position: absolute;
    inset: 0;
    opacity: 0.1;
    background-image: radial-gradient(circle at 2px 2px, rgba(255, 255, 255, 0.3) 1px, transparent 0);
    background-size: 40px 40px;
  }

  .cta-content {
    max-width: 1024px;
    margin: 0 auto;
    text-align: center;
    position: relative;
  }

  .cta-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border-radius: 9999px;
    background-color: rgba(59, 130, 246, 0.2);
    color: #93c5fd;
    font-size: 14px;
    font-weight: 500;
    margin-bottom: 24px;
    backdrop-filter: blur(4px);
    border: 1px solid rgba(59, 130, 246, 0.3);
  }

  .cta-title {
    font-size: 3rem;
    font-weight: bold;
    color: white;
    margin-bottom: 24px;
  }

  .cta-description {
    font-size: 1.25rem;
    color: #d1d5db;
    margin-bottom: 40px;
    line-height: 1.6;
    max-width: 768px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-buttons {
    display: flex;
    flex-direction: column;
    gap: 16px;
    max-width: 448px;
    margin: 0 auto;
  }

  .cta-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 16px 32px;
    border-radius: 12px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
    transform: scale(1);
  }

  .cta-btn:hover {
    transform: scale(1.05);
  }

  .cta-btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    color: white;
  }

  .cta-btn-primary:hover {
    background: linear-gradient(135deg, #2563eb 0%, #7c3aed 100%);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  }

  .cta-btn-secondary {
    border: 2px solid rgba(255, 255, 255, 0.3);
    color: white;
    background-color: transparent;
    backdrop-filter: blur(4px);
  }

  .cta-btn-secondary:hover {
    border-color: rgba(255, 255, 255, 0.5);
    background-color: rgba(255, 255, 255, 0.1);
  }

  /* Responsive Design */
  @media (min-width: 640px) {
    .cta-buttons {
      flex-direction: row;
    }
  }

  @media (min-width: 768px) {
    .hero-title {
      font-size: 4rem;
    }

    .cta-title {
      font-size: 4rem;
    }
  }

  @media (min-width: 1024px) {
    .hero-title {
      font-size: 5rem;
    }

    .cta-title {
      font-size: 5rem;
    }
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .team-card:nth-child(1) { animation-delay: 0.1s; }
  .team-card:nth-child(2) { animation-delay: 0.2s; }
  .team-card:nth-child(3) { animation-delay: 0.3s; }
  .team-card:nth-child(4) { animation-delay: 0.4s; }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const teamCards = document.querySelectorAll('.team-card');
    const emptyState = document.getElementById('empty-state');

    filterButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLButtonElement) {
        const department = this.getAttribute('data-department');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('active');
        });
        this.classList.add('active');
        
        // Filter team cards
        let visibleCards = 0;
        teamCards.forEach(card => {
          if (department === 'all' || card.getAttribute('data-department') === department) {
            card.classList.remove('hidden');
            visibleCards++;
          } else {
            card.classList.add('hidden');
          }
        });

        // Show/hide empty state
        if (visibleCards === 0) {
          emptyState?.classList.remove('hidden');
        } else {
          emptyState?.classList.add('hidden');
        }
      });
    });

    // Add smooth hover effects for social links
    const socialLinks = document.querySelectorAll('.social-link');
    socialLinks.forEach(link => {
      link.addEventListener('mouseenter', function(this: HTMLAnchorElement) {
        const icon = this.querySelector('i');
        if (icon) {
          if (icon.classList.contains('fa-envelope')) {
            (icon as HTMLElement).style.transform = 'rotate(12deg)';
          } else if (icon.classList.contains('fa-globe')) {
            (icon as HTMLElement).style.transform = 'translateX(4px)';
          }
        }
      });

      link.addEventListener('mouseleave', function(this: HTMLAnchorElement) {
        const icon = this.querySelector('i');
        if (icon) {
          (icon as HTMLElement).style.transform = '';
        }
      });
    });

    // Add subtle parallax effect to hero section
    const heroSection = document.querySelector('.hero-section');
    const heroPattern = document.querySelector('.hero-pattern');
    
    if (heroSection && heroPattern) {
      window.addEventListener('scroll', function() {
        const scrolled = window.pageYOffset;
        const parallax = scrolled * 0.5;
        (heroPattern as HTMLElement).style.transform = `translateY(${parallax}px)`;
      });
    }

    // Add intersection observer for fade-in animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          (entry.target as HTMLElement).style.animationPlayState = 'running';
        }
      });
    }, observerOptions);

    // Initially pause animations
    teamCards.forEach(card => {
      (card as HTMLElement).style.animationPlayState = 'paused';
      observer.observe(card);
    });
  });
</script>
